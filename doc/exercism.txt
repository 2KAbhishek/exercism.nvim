*exercism.txt*         For Neovim >= 0.8.0        Last change: 2025 January 25

==============================================================================
Table of Contents                                 *exercism-table-of-contents*

  - Features                                               |exercism-features|
  - Setup                                                     |exercism-setup|
  - Usage                                                     |exercism-usage|
  - What’s Next                                     |exercism-what’s-next|
  - Behind The Code                                 |exercism-behind-the-code|

exercism.nvim integrates exercism into Neovim by providing a set of commands
and keybindngs to help you solve exercises faster.


FEATURES                                                   *exercism-features*

- Browse and choose exercises from the entire exercism library from within Neovim
- Quickly test and submit your solutions
- Review your existing solution for an exercise
- Simple keybindings and commands to make your workflow faster


SETUP                                                         *exercism-setup*


REQUIREMENTS ~

- exercism-cli <https://exercism.io/cli> installed and configured
    - Make sure to login with `exercism configure`
- tmux-tea <https://github.com/2kabhishek/tmux-tea> (optional, recommended) for separate tmux sessions for each exercise
    - Use `set -g @tea-default-command 'nvim'` for a better experience


INSTALLATION ~

>lua
    -- Lazy
    {
        '2kabhishek/exercism.nvim',
        cmd = {
            'ExercismLanguages',
            'ExercismList',
            'ExercismSubmit',
            'ExercismTest',
        },
        keys = {
            '<leader>exa',
            '<leader>exl',
            '<leader>exs',
            '<leader>ext',
        },
        dependencies = {
            '2kabhishek/utils.nvim', -- required, for utility functions
            'stevearc/dressing.nvim', -- optional, highly recommended, for fuzzy select UI
            '2kabhishek/termim.nvim', -- optional, better UX for running tests
        },
        -- Add your custom configs here, keep it blank for default configs (required)
        opts = {},
    },
<


USAGE                                                         *exercism-usage*


CONFIGURATION ~

>lua
    exercism.setup({
        exercism_workspace = '~/exercism', -- Default workspace for exercism exercises
        default_language = 'ruby', -- Default language for exercise list
        add_default_keybindings = true, -- Whether to add default keybindings
        icons = {
            concept = '', -- Icon for concept exercises
            practice = '', -- Icon for practice exercises
        },
    })
<


COMMANDS ~

`exercism.nvim` adds the following commands:

- `ExercismLanguages`Lists all available languages, select one to list exercises.
- `ExercismList [language]`Lists exercises for the specified language, if not specified, uses the `default_language`.
- `ExercismTest`Runs tests for the current exercise.
- `ExercismSubmit`Submits the current exercise.


KEYBINDINGS ~

Here are the default keybindings:

- `<leader>exa` for `ExercismLanguages`
- `<leader>exl` for `ExercismList`
- `<leader>ext` for `ExercismTest`
- `<leader>exs` for `ExercismSubmit`


  You can change these by setting `add_default_keybindings` to `false` and adding
  your own keybindings.

HELP ~

Run `:help exercism.txt` for more details.


WHAT’S NEXT                                         *exercism-what’s-next*


TO-DO ~

- Add tests


BEHIND THE CODE                                     *exercism-behind-the-code*


INSPIRATION ~

I really like exercism but the back and forth between the browser and the
terminal was a bit annoying. So I decided to integrate it with Neovim.


CHALLENGES/LEARNINGS ~

- I build exercism-fetcher <https://github.com/2kabhishek/exercism-fetcher> to fetch exercises from exercism’s github repos.
- Reused knowledge from octohub.nvim, not too many challenges here.


MORE INFO ~

- octohub.nvim <https://github.com/2kabhishek/octohub.nvim> — GitHub Repos in Neovim
- nerdy.nvim <https://github.com/2kabhishek/nerdy.nvim> — Find nerd glyphs easily
- tdo.nvim <https://github.com/2KAbhishek/tdo.nvim> — Fast and simple notes in Neovim
- termim.nvim <https://github.com/2kabhishek/termim.nvim> — Neovim terminal improved


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
